[{"content":"约束概念 约束是作用于表中列的规则，用于限制加入表的数据 约束的存在保证数据库数据的正确性，有限性和完整性 约束的分类 约束名称 功能描述 关键字 非空约束 保证列中数据不出现null NOT NULL 唯一约束 保证列中数据各不相同，唯一性 UNIQUE 主键约束 主键是一行数据的唯一标识，要求非空且唯一 PRIMARY KEY 默认约束 保存数据时,未指定就采用默认值 DEFAULT 外键约束 外键让两个表的数据之间建立连接，保证数据一致且完整 FOREIGN KEY 例子 1 2 3 4 5 6 7 8 9 10 11 12 -- 建表时对字段进行约束 CREATE TABLE emp( id INT PRIMARY KEY, -- 唯一主键 ename VARCHAR(60) NOT NULL UNIQUE, -- 非空且唯一 joindate DATE NOT NULL, -- 非空 salary DOUBLE(7,2) NOT NULL, -- 非空 bonus DOUBLE(7,2) DEFAULT 0, -- 默认为0 -- 部门id dept_id INT NOT NULL, -- 添加外键dept_id并关联dept表的id主键 CONSTRAINF fk_emp_dept FOREIGN KEY(dept_id) REFERENCES dept(id) ); 外键约束 员工表(emp)\nid name age dep_id 1 张三 22 1 2 李四 23 1 3 王五 24 2 4 赵六 25 2 部门表(dept)\nid dep_name addr 1 研发部 研发部地址 2 产品部 产品部地址 ","date":"2022-09-29T21:44:20+08:00","permalink":"https://eoezora.github.io/posts/mysql-note/mysql-note-2/","title":"Mysql笔记-约束"},{"content":"关键字 break 终止循环\ncontinue 跳过本次循环，回到循环条件判断\n内存分配 栈 方法运行时使用的内存，方法进栈运行，运行完出栈\n堆 new出来的都在堆内存中开新空间\n方法区 存储可以运行的class文件\n本地方法栈 Jvm在使用操作系统功能时使用、\n寄存器 给CPU使用，与开发无关\n基本数据类型 整数类型\n浮点数型\n布尔类型\n字符类型\n数据存在自己的内存空间中，赋值给其他变量时是真实的值\n1 2 3 int a = 100; int b = a; //改变b不影响a 引用数据类型 除了基本数据类型之外的所有类型，只要是new出来的都是引用数据类型，变量存储的是内存地址\n1 2 3 4 5 6 7 8 9 10 public static void main(String[] args) { int a[] = {1,2,3,4,5,6}; a(a); System.out.println(a[0]); } public static void a(int[] v) { //此处的v是指向数组a的地址， v[0] = 100; } ","date":"2022-08-10T01:00:00+02:00","permalink":"https://eoezora.github.io/posts/a-test-post/","title":"第一篇测试文章"}]