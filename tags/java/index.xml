<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>java on 学習のメモ</title>
    <link>https://eoezora.github.io/tags/java/</link>
    <description>Recent content in java on 学習のメモ</description>
    <image>
      <url>https://eoezora.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://eoezora.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 04 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://eoezora.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaWEB笔记-MyBatis-增删改查</title>
      <link>https://eoezora.github.io/posts/mybatis/mybatis-%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</link>
      <pubDate>Tue, 04 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://eoezora.github.io/posts/mybatis/mybatis-%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</guid>
      <description>增删改查例子 AccountMapper.xml &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt; &amp;lt;!DOCTYPE mapper PUBLIC &amp;#34;-//mybatis.org//DTD Mapper 3.0//EN&amp;#34; &amp;#34;http://mybatis.org/dtd/mybatis-3-mapper.dtd&amp;#34;&amp;gt; &amp;lt;!-- namespace是映射接口的路径 --&amp;gt; &amp;lt;mapper namespace=&amp;#34;com.eoezora.mybatisDemo.mapper.AccountMapper&amp;#34;&amp;gt; &amp;lt;!-- 添加数据, 参数POJO -&amp;gt; EoeAccount --&amp;gt; &amp;lt;!-- 添加这两个 useGeneratedKeys=&amp;#34;true&amp;#34; keyProperty=&amp;#34;id&amp;#34; 属性在insert标签里可以返回主键 --&amp;gt; &amp;lt;insert id=&amp;#34;addAccount&amp;#34; useGeneratedKeys=&amp;#34;true&amp;#34; keyProperty=&amp;#34;id&amp;#34;/&amp;gt; &amp;lt;insert id=&amp;#34;addAccount&amp;#34; &amp;gt; INSERT INTO account (name, age, brithDay, location) &amp;lt;!-- 这里的名字要与POJO类力的变量名一致 --&amp;gt; VALUES (#{name},#{age},#{brithDay},#{location}); &amp;lt;/insert&amp;gt; &amp;lt;!-- 删除一条数据 --&amp;gt; &amp;lt;delete id=&amp;#34;delAccouintById&amp;#34;&amp;gt; DELETE FROM account WHERE id = #{id} &amp;lt;/delete&amp;gt; &amp;lt;!-- 删除多条数据 --&amp;gt; &amp;lt;delete id=&amp;#34;delAccouintByIds&amp;#34;&amp;gt; DELETE FROM account WHERE id in &amp;lt;!</description>
    </item>
    
    <item>
      <title>JavaWEB笔记-MyBatis快速入门笔记</title>
      <link>https://eoezora.github.io/posts/mybatis/mybatis/</link>
      <pubDate>Tue, 04 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://eoezora.github.io/posts/mybatis/mybatis/</guid>
      <description>简介: 一个用于数据持久层的框架
基本配置 //mybatis配置文件 String resource = &amp;#34;mybatis-config.xml&amp;#34;; InputStream inputStream = Resources.getResourceAsStream(resource); SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream); try (SqlSession session = sqlSessionFactory.openSession()) { //此处是直接调用方法进行操作，建议使用代理开发 List&amp;lt;EoeAccount&amp;gt; datas = session.selectList(&amp;#34;test.selectAll&amp;#34;); datas.forEach(System.out::println); session.close(); } Mybatis配置文件(mybatis-config.xml)
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt; &amp;lt;!DOCTYPE configuration PUBLIC &amp;#34;-//mybatis.org//DTD Config 3.0//EN&amp;#34; &amp;#34;https://mybatis.org/dtd/mybatis-3-config.dtd&amp;#34;&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;environments default=&amp;#34;development&amp;#34;&amp;gt; &amp;lt;environment id=&amp;#34;development&amp;#34;&amp;gt; &amp;lt;transactionManager type=&amp;#34;JDBC&amp;#34;/&amp;gt; &amp;lt;dataSource type=&amp;#34;POOLED&amp;#34;&amp;gt; &amp;lt;property name=&amp;#34;driver&amp;#34; value=&amp;#34;com.mysql.cj.jdbc.Driver&amp;#34;/&amp;gt; &amp;lt;property name=&amp;#34;url&amp;#34; value=&amp;#34;jdbc:mysql://localhost:3306/eoezora?useSSL=false&amp;amp;amp;allowPublicKeyRetrieval=true&amp;#34;/&amp;gt; &amp;lt;property name=&amp;#34;username&amp;#34; value=&amp;#34;root&amp;#34;/&amp;gt; &amp;lt;property name=&amp;#34;password&amp;#34; value=&amp;#34;root&amp;#34;/&amp;gt; &amp;lt;/dataSource&amp;gt; &amp;lt;/environment&amp;gt; &amp;lt;/environments&amp;gt; &amp;lt;mappers&amp;gt; &amp;lt;mapper resource=&amp;#34;mappers/TestDemoMapper.xml&amp;#34;/&amp;gt; &amp;lt;/mappers&amp;gt; &amp;lt;/configuration&amp;gt; SQL语句映射文件(TestDemoMapper.</description>
    </item>
    
    <item>
      <title>JavaWEB笔记-MyBatis配置文件</title>
      <link>https://eoezora.github.io/posts/mybatis/mybatis-%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 04 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://eoezora.github.io/posts/mybatis/mybatis-%E9%85%8D%E7%BD%AE/</guid>
      <description>简介</description>
    </item>
    
    <item>
      <title>JavaWEB笔记-JDBC-API详解</title>
      <link>https://eoezora.github.io/posts/jdbc-note/api%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 03 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://eoezora.github.io/posts/jdbc-note/api%E8%AF%A6%E8%A7%A3/</guid>
      <description>DriverManager //创建一个链接 String url = &amp;#34;jdbc:mysql://localhost/database?useSSL=false&amp;amp;allowPublicKeyRetrieval=true&amp;#34;; String user = &amp;#34;&amp;#34;; String pwd = &amp;#34;&amp;#34;; Connection connection = DriverManager.getConnection(url,user,pwd); Connection 用于获取执行SQL的对象和管理事务
//创建链接 Connection connection = DriverManager.getConnection(url,user,pwd); //要执行的SQL语句 String sql = &amp;#34;UPDATE users SET money = 1000 WHERE id = 114514;&amp;#34;; //创建执行对象 Statement statement = connection.createStatement(); try { //开启事务 connection.setAutoCommit(false); //执行语句 statement.executeUpdate(sql); //事务提交 connection.commit(); } catch (Exception e) { //若执行失败则回滚事务 connection.rollback(); throw new RuntimeException(e); } Statement 作用：执行SQL语句
//执行DML DDL 语句， 增删改，返回受影响的行数 int executeUpdate(String sql) //执行DQL语句 返回ResultSet结果集对象,查询语句 ResultSet executeQuery(String sql) ResultSet 作用：一个结果集对象，封装了DQL查询语句的结果</description>
    </item>
    
    <item>
      <title>JavaWEB笔记-JDBC-连接池</title>
      <link>https://eoezora.github.io/posts/jdbc-note/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</link>
      <pubDate>Mon, 03 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://eoezora.github.io/posts/jdbc-note/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</guid>
      <description>简介: 数据库连接池是个容器, 负责分配, 管理数据库链接, 允许应用程序重复使用现有的数据库链接, 而不是重新建立一个新连接
标准接口: DataSource
Druid配置文件 url=jdbc:mysql:///eoezora?useSSL=false&amp;amp;allowPublicKeyRetrieval=true username=root password=root #初始化连接数量 initialSize=5 #最大连接数 maxActive=10 #最大等待时间 ms maxWait=3000 加载配置 //1.加载配置文件 Properties pro = new Properties(); InputStream is = DruidDemo.class.getClassLoader().getResourceAsStream(&amp;#34;druid.properties&amp;#34;); pro.load(is); //2.获取连接池对象 DataSource ds = DruidDataSourceFactory.createDataSource(pro); //3.获取连接 Connection conn = ds.getConnection(); 归还连接|释放资源 public static void close(ResultSet rs, Statement stmt, Connection conn){ if (rs!=null) { try { rs.close(); } catch (Exception e) { System.out.println(e.getMessage()); } } if (stmt!=null) { try { stmt.</description>
    </item>
    
  </channel>
</rss>
